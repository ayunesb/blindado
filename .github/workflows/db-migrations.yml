name: Supabase DB Migrations

on:
  push:
    branches: ['main']
    paths:
      - 'supabase/migrations/**'
      - '.github/workflows/db-migrations.yml'
  pull_request:
    branches: ['main']
    paths:
      - 'supabase/migrations/**'
  workflow_dispatch:

jobs:
  validate:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: supabase/setup-cli@v1
      - name: Lint migrations
        run: supabase db lint
      - name: Dry-run push against project
        env:
          SUPABASE_PROJECT_REF: ${{ secrets.SUPABASE_PROJECT_REF }}
          SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
        run: |
          supabase link --project-ref "$SUPABASE_PROJECT_REF" --password "$SUPABASE_DB_PASSWORD"
          supabase db push --linked --dry-run

  apply:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: supabase/setup-cli@v1
      - name: Link project
        env:
          SUPABASE_PROJECT_REF: ${{ secrets.SUPABASE_PROJECT_REF }}
          SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
        run: supabase link --project-ref "$SUPABASE_PROJECT_REF" --password "$SUPABASE_DB_PASSWORD"
      - name: Apply migrations
        run: supabase db push --linked --include-all
      - name: Seed (optional)
        if: ${{ secrets.SUPABASE_DB_URL != '' }}
        env:
          SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL }}
        run: |
          sudo apt-get update && sudo apt-get install -y postgresql-client
          psql "$SUPABASE_DB_URL" -v ON_ERROR_STOP=1 -f supabase/seed.sql
