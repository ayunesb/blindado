name: Acceptance Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      project_ref:
        description: "Supabase project ref (overrides FN)"
        required: false
      functions_url:
        description: "Full functions base URL (if not standard)"
        required: false

jobs:
  at:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        include:
          - { city: CDMX, tier: direct, armed: 0, vehicle: 0, vtype: suv }
          - { city: CDMX, tier: direct, armed: 1, vehicle: 0, vtype: suv }
          - { city: CDMX, tier: direct, armed: 0, vehicle: 1, vtype: suv }
          - { city: CDMX, tier: direct, armed: 0, vehicle: 1, vtype: armored }
          - { city: CDMX, tier: elite, armed: 1, vehicle: 1, vtype: armored }
          - { city: GDL, tier: direct, armed: 0, vehicle: 0, vtype: suv }
          - { city: MTY, tier: corporate, armed: 1, vehicle: 1, vtype: armored }
          # Removed surge-night scenario (canonical pricing no longer auto-computes surge).
    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      CLIENT_ID: 1b387371-6711-485c-81f7-79b2174b90fb
      GUARD_ID: c38efbac-fd1e-426b-a0ab-be59fd908c8c
      HOURS: 4
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Derive Functions URL
        id: fnurl
        run: |
          if [ -n "${{ github.event.inputs.functions_url }}" ]; then
            echo "FN=${{ github.event.inputs.functions_url }}" >> $GITHUB_ENV
          elif [ -n "${{ github.event.inputs.project_ref }}" ]; then
            echo "FN=https://${{ github.event.inputs.project_ref }}.supabase.co/functions/v1" >> $GITHUB_ENV
          elif [ -n "$SUPABASE_URL" ]; then
            # SUPABASE_URL is like https://<ref>.supabase.co
            echo "FN=${SUPABASE_URL%/}/functions/v1" >> $GITHUB_ENV
          else
            echo "::error::Unable to derive FN (provide project_ref or functions_url or SUPABASE_URL secret)"; exit 1;
          fi
          echo "Using FN=$FN"

      - name: Install jq & curl
        run: sudo apt-get update && sudo apt-get install -y jq curl

      - name: Show FN
        run: echo "FN=$FN"

      - name: Run Acceptance Tests (matrix)
        env:
          CITY: ${{ matrix.city }}
          TIER: ${{ matrix.tier }}
          ARMED: ${{ matrix.armed }}
          VEHICLE: ${{ matrix.vehicle }}
          VEHICLE_TYPE: ${{ matrix.vtype }}
          SURGE_NIGHT: ${{ matrix.surge_night || 0 }}
          SURGE_EXPECT_MIN: ${{ matrix.surge_expect_min || '' }}
        run: |
          echo "Matrix CITY=$CITY TIER=$TIER ARMED=$ARMED VEHICLE=$VEHICLE VTYPE=$VEHICLE_TYPE SURGE_NIGHT=$SURGE_NIGHT"
          chmod +x scripts/at.sh
          ./scripts/at.sh

      - name: Summary
        if: always()
        run: |
          echo "Workflow complete for CITY=$CITY TIER=$TIER ARMED=$ARMED VEHICLE=$VEHICLE VTYPE=$VEHICLE_TYPE SURGE_NIGHT=$SURGE_NIGHT"
