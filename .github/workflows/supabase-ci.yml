name: Supabase Migrations & Smoke

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

env:
  # Project-wide envs; secrets defined in repo settings
  SUPABASE_PROJECT_REF: ${{ secrets.SUPABASE_PROJECT_REF }}
  SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
  SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
  SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
  ADMIN_API_SECRET: ${{ secrets.ADMIN_API_SECRET }}
  STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
  STRIPE_PUBLISHABLE_KEY: ${{ secrets.STRIPE_PUBLISHABLE_KEY }}
  STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
  # Optional: provide full DB URL if you want to run seed.sql via psql
  SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL }}
  # Toggle to run seed step (requires SUPABASE_DB_URL)
  RUN_SEED: ${{ vars.RUN_SEED || 'false' }}

jobs:
  migrations:
    name: Apply Supabase migrations
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1

      - name: Install tools (jq, psql)
        run: |
          sudo apt-get update
          sudo apt-get install -y jq postgresql-client

      - name: Link project (non-interactive)
        env:
          SUPABASE_ACCESS_TOKEN: ${{ env.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_PROJECT_REF: ${{ env.SUPABASE_PROJECT_REF }}
        run: |
          test -n "$SUPABASE_ACCESS_TOKEN" || { echo 'Missing SUPABASE_ACCESS_TOKEN'; exit 1; }
          test -n "$SUPABASE_PROJECT_REF" || { echo 'Missing SUPABASE_PROJECT_REF'; exit 1; }
          supabase link --project-ref "$SUPABASE_PROJECT_REF"

      - name: Migration list (pre)
        env:
          SUPABASE_DB_PASSWORD: ${{ env.SUPABASE_DB_PASSWORD }}
        run: |
          test -n "$SUPABASE_DB_PASSWORD" || { echo 'Missing SUPABASE_DB_PASSWORD'; exit 1; }
          # psql respects PGPASSWORD for auth prompts invoked by CLI
          export PGPASSWORD="$SUPABASE_DB_PASSWORD"
          supabase migration list --linked -- --no-pager | cat

      - name: Push migrations (non-interactive)
        env:
          SUPABASE_DB_PASSWORD: ${{ env.SUPABASE_DB_PASSWORD }}
        run: |
          export PGPASSWORD="$SUPABASE_DB_PASSWORD"
          yes | supabase db push --linked --include-all

      - name: Migration list (post)
        env:
          SUPABASE_DB_PASSWORD: ${{ env.SUPABASE_DB_PASSWORD }}
        run: |
          export PGPASSWORD="$SUPABASE_DB_PASSWORD"
          supabase migration list --linked -- --no-pager | cat

      - name: Optional seed.sql
        if: env.RUN_SEED == 'true' && env.SUPABASE_DB_URL != ''
        env:
          SUPABASE_DB_URL: ${{ env.SUPABASE_DB_URL }}
        run: |
          echo 'Running seed.sql against remote database'
          psql "$SUPABASE_DB_URL" -v ON_ERROR_STOP=1 -f supabase/seed.sql

  smoke:
    name: Smoke test Edge Functions
    runs-on: ubuntu-latest
    needs: migrations
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install tools (jq, curl)
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl

      - name: Run smoke.sh
        env:
          # Point FN at this project's Functions base URL
          FN: https://${{ env.SUPABASE_PROJECT_REF }}.supabase.co/functions/v1
          ANON: ${{ env.SUPABASE_ANON_KEY }}
          ADMIN: ${{ env.ADMIN_API_SECRET }}
        run: |
          bash scripts/smoke.sh
